version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"  # Expose Nginx on port 8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount the Nginx configuration
      - ./wordpress:/var/www/html  # Mount the WordPress core directory
      - ./wp-content:/var/www/html/wp-content  # Mount the custom wp-content directory
    depends_on:
      - php

  php:
    build:
      context: php
    container_name: php
    volumes:
      - ./wordpress:/var/www/html  # Mount the WordPress core directory
      - ./wp-content:/var/www/html/wp-content  # Mount the custom wp-content directory
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini  # Xdebug config
      - ./php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: remote_enable=1 remote_host=host.docker.internal remote_port=9003
    command: sh -c "if [ ! -f /var/www/html/wp-config.php ]; then curl -o wordpress.tar.gz https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz && tar -xvf wordpress.tar.gz --strip-components=1 -C /var/www/html && rm wordpress.tar.gz; fi && php-fpm"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db

  db:
    image: mysql:5.7
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"  # Expose phpMyAdmin on port 8081
    depends_on:
      - db

  nextjs:
    build:
      context: ./nextapp   # folder with your Next.js app and Dockerfile
    container_name: nextjs
    ports:
      - "3000:3000"       # expose Next.js on host port 3000
    volumes:
      - ./nextapp:/app    # mount Next.js source for hot reload
    depends_on:
      - php
      - db

volumes:
  db-data:
  redis-data:
